[MASTER]

# Specify a configuration file.
# The default is '.pylintrc'.
rcfile=.pylintrc

# Pickle collected data for later comparisons.
persistent=yes

# When enabled, pylint would attempt to guess common misconfiguration and
# emit user-friendly hints instead of false-positive error messages.
suggestion-mode=yes

[MESSAGES CONTROL]

# Only show warnings with the listed confidence levels. Leave empty to show
# all. Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, INFERENCE_WARNING,
# LOW, MEDIUM, UNDEFINED.
confidence=HIGH

# Disable a warning with the given message identifier(s).
disable=C0114,C0115,C0103

# Set the output format. Available formats are text, parseable, colorized, json
# and msvs (visual studio).
output-format=colorized

[REPORTS]

# Tells whether to display a full report or only the messages
reports=yes

# Python expression which should return a note less than 10 (10 is the highest
# note). You have access to the variables errors, warnings, statement which
# respectively contain the number of errors / warnings messages and the total
# number of statements analyzed. This is used by the global evaluation report
# (RP0004).
evaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)

[LOGGING]

# Logging modules to check that statements have been imported.
#logging-modules=

[BASIC]

# Required attributes for module, separated by a space
required-attributes=no

# Expression for a variable name to match (case-insensitive) when defining a
# member name which should be excluded from scoring the code (i.e. when
# including it raises a warning).
score=no

[VARIABLES]

# Tells whether we should check for unused import in __init__.py files.
init-import=no

# A regular expression matching the name of dummy variables (i.e. expected
# to be used in a 'for' loop) that should not be checked when computing
# variable statistics for a module.
dummy-variables-rgx=_|dummy



[DESIGN]

# Specify the maximum number of undecorated objects to display in a qualified name
max-line-length=120

# Maximum number of arguments for function / method
max-args=6

# Argument names that match this expression will be ignored. Default to
# "^(_.*|dummy)$".
ignore-if-name-matching=

# Maximum number of locals for function / method body
max-locals=25

# Maximum number of return / yield for function / method body
max-returns=6

# Maximum number of branch for function / method body
max-branchs=15

# Maximum number of statements in function / method body
max-statements=50

# Regular expression matching correct argument names
argument-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct variable names
variable-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct function names
function-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct method names
method-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct class names
class-rgx=[A-Z_][a-zA-Z0-9_]{2,30}$

# Regular expression matching correct module names
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z_][a-zA-Z0-9_]+))(\.(([a-z_][a-z0-9_]*)|([A-Z_][a-zA-Z0-9_]+)))*

[EXCEPTIONS]



# Allow listing of inherited exceptions as arguments to catch


[FORMAT]
attr-naming-style=any
